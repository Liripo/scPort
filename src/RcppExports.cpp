// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// LogNorm
arma::sp_mat LogNorm(arma::sp_mat data, int scale_factor);
RcppExport SEXP _scPort_LogNorm(SEXP dataSEXP, SEXP scale_factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type scale_factor(scale_factorSEXP);
    rcpp_result_gen = Rcpp::wrap(LogNorm(data, scale_factor));
    return rcpp_result_gen;
END_RCPP
}
// clr_norm_rcpp
arma::sp_mat clr_norm_rcpp(arma::sp_mat mat);
RcppExport SEXP _scPort_clr_norm_rcpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(clr_norm_rcpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// SparseRowVarStd_rcpp
NumericVector SparseRowVarStd_rcpp(arma::sp_mat mat, NumericVector mu, NumericVector sd, double vmax);
RcppExport SEXP _scPort_SparseRowVarStd_rcpp(SEXP matSEXP, SEXP muSEXP, SEXP sdSEXP, SEXP vmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type vmax(vmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(SparseRowVarStd_rcpp(mat, mu, sd, vmax));
    return rcpp_result_gen;
END_RCPP
}
// regress_out_matrix_rcpp
NumericMatrix regress_out_matrix_rcpp(NumericMatrix mat, Rcpp::List qr);
RcppExport SEXP _scPort_regress_out_matrix_rcpp(SEXP matSEXP, SEXP qrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type qr(qrSEXP);
    rcpp_result_gen = Rcpp::wrap(regress_out_matrix_rcpp(mat, qr));
    return rcpp_result_gen;
END_RCPP
}
// FastSparseRowScale_rcpp
arma::mat FastSparseRowScale_rcpp(arma::sp_mat mat, bool scale, bool center, double scale_max);
RcppExport SEXP _scPort_FastSparseRowScale_rcpp(SEXP matSEXP, SEXP scaleSEXP, SEXP centerSEXP, SEXP scale_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type mat(matSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type center(centerSEXP);
    Rcpp::traits::input_parameter< double >::type scale_max(scale_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(FastSparseRowScale_rcpp(mat, scale, center, scale_max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scPort_LogNorm", (DL_FUNC) &_scPort_LogNorm, 2},
    {"_scPort_clr_norm_rcpp", (DL_FUNC) &_scPort_clr_norm_rcpp, 1},
    {"_scPort_SparseRowVarStd_rcpp", (DL_FUNC) &_scPort_SparseRowVarStd_rcpp, 4},
    {"_scPort_regress_out_matrix_rcpp", (DL_FUNC) &_scPort_regress_out_matrix_rcpp, 2},
    {"_scPort_FastSparseRowScale_rcpp", (DL_FUNC) &_scPort_FastSparseRowScale_rcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_scPort(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
